# This is a commented line. Comment only full lines (no comments after input on same line!)!!!
# Feel free to move these comments to the end, or remove them, if they bug you.
#
# Seed random number generators (actual input lines always begin with a capital letter label e.g. S)
# 0: random seed, else: user-defined
# seed
S 0
#
# Output (O)
# T_print, T_write: interval for printing, interval for saving state
# T_print	T_write
O 100		1000
#
# Configure arrays and FFTW plans (A)
# W	H
A 512   256
#
# Initialization (I)
# protip: you can initialize the system with one of the initialization types, then replace one of the two phases with one loaded from a file (example: use a relaxed state for one phase, initialize other in disordered phase)
# W, H: width, height
# type: 0: tiled, 1: bicrystalline, 2: embedded crystallite, 3: load saved state
# dx, dy: x-, y-discretization (don't have to be the same with the dx and dy under "Relaxation" -> allows for strained initial states; note that box size optimization tries to relieve strain if active)
# l0, l_BN: dimensionless lattice constant, ratio of HBN and graphene lattice constants
# x: fraction of HBN phase to graphene phase
# A_i: initial amplitude of crystalline state
# theta_i: rotation angle of phase i
# p_i^l, p_i^s: average density of liquid, solid state
# bicrystalline initialization
# type	dx		dy		l0	l_BN	x	p_C^l	p_C^s	A_C	theta_C	p_BN^l	p_BN^s	A_BN	theta_BN
I 1	0.6		0.6		7.32	1.0	0.25	0.2675	0.2475	-0.1	6.6  -0.4425	-0.3525	0.1	-6.6
#
# N, M: horizontal, vertical number of tiles
# tiled initialization
# type	dx	dy	l0		l_BN	N	M	p_C^l	p_C^s	A_C		p_BN^l	p_BN^s	A_BN
# 0		0.7	0.7	7.2552	1.018	8	8	0.2675	0.2475	-0.1	-0.4425	-0.3525	0.1
#
# R: crystallite radius (dimensionless units)
# phases: 0: graphene crystallite, HBN matrix, 1: HBN crystallite, graphene matrix
# u_i, v_i: offset to lattice of phase i (dimensionless)
# embedded crystallite
# type	dx	  dy	   l0		l_BN	R	phases	p_C_l	p_C_s	A_C	theta_C	u_C	v_C	p_BN_l	p_BN_s	A_BN	theta_BN	u_BN	v_BN
#I 2	0.708516 0.711767 7.2552	1.018	125.0	1	0.2675	0.2475	-0.1	0.0	0.0	0.0	-0.4425	-0.3525	0.1	0.0		0.0	0.0
#
# filename: data file name
# which: which field(s) is (are) to be read: 0: carbon, else: boron & nitrogen
# load saved state
# type	filename		which
# 3		cbn_t:10000.dat	0
#
# Add noise (N)
# A_C, A_BN: noise amplitudes (peak amplitude; noise from uniform distribution)
# A_C	A_BN
# 0.0	0.0
#
# Model (M)
# model parameters: see documentation
# gamma_i^l, gamma_i^s: values of "chemical potential fields" for liquid (disordered) and solid states
# lambda_BN = (lattice constant of HBN) / (lattice constant of graphene)
# sigma_u, sigma_mask: standard deviations for smoothed average density fields (this one in k-space so making it smaller blurs density more) and mask function (in direct space)
#
#	alpha_C		beta_C		gamma_C^l		gamma_C^s		delta_C
#	alpha_BN	beta_BN		gamma_BN^l		gamma_BN^s		delta_BN
#	alpha_B,N	beta_B,N	gamma_B,N
#	alpha_C,B	gamma_C,B
#	alpha_C,N	gamma_C,N
#	alpha_B,C	gamma_B,C
#	alpha_N,C	gamma_N,C
#	lambda_BN
#	sigma_u		sigma_mask
#
# don't add comments between the lines below!
#
M 	-0.15		1.0		0.1			-0.1			1.0
	-0.1		1.0		-0.1			0.1			1.0
	0.5		0.02		0.3
	-0.12		0.0
	-0.12		0.0
	-0.12		0.0
	-0.12		0.0
	1.018
	0.2			0.2
#
# Relaxation (R)
# it might be possible to chain multiple relaxation steps together, but I haven't tested this; safer to do individual runs where result of previous run is loaded from file for the next one
# T: total number of time steps
# dx, dy, dt: x-, y-, time-discretization
# T_optimize: interval for calculation box optimization
# T		dx			dy		dt	T_optimize  
R 10000		0.6		0.6         0.25	   0
